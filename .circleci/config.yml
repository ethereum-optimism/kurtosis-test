version: 2.1

executors:
  default:
    machine:
      image: ubuntu-2404:2024.05.1

workflows:
  main:
    jobs:
      - go-build
      - go-lint
      - go-test
      - cli-test:
          requires:
            - go-build
  
  release:
    jobs:
      - go-release:
          context:
            - circleci-repo-kurtosis-test
          filters: 
            tags:
              only: 
                - /^v?\d+\.\d+\.\d+.*?/
            # Without explicitly ignoring all branches, CircleCI will run the job on all branches
            # even if no tags have been pushed
            branches:
              ignore: /.*/

commands:
  install-dependencies:
    steps:
      - run:
          name: Install mise
          command: curl https://mise.run | MISE_INSTALL_PATH=/home/circleci/bin/mise sh
      - run:
          name: Activate mise
          command: echo 'eval "$(mise activate bash)"' >> $BASH_ENV
      - run:
          name: Install mise dependencies
          command: mise install

  install-go-modules:
    parameters:
      from:
        description: Path to go.sum file
        type: string
        default: go.work.sum
      path:
        description: Go module cache path
        type: string
        default: /home/circleci/.go_workspace/pkg/mod
      version:
        description: Version (cache breaker)
        type: string
        default: v1
    steps:
      - restore_cache:
          name: Restore Go modules cache
          keys:
            - go-mod-{{ arch }}-{{ checksum "<< parameters.from >>" }}-<< parameters.version >>
      - run:
          name: Download Go modules
          command: go mod download
      - save_cache:
          key: go-mod-{{ arch }}-{{ checksum "<< parameters.from >>" }}-<< parameters.version >>
          paths:
              - << parameters.path >>

jobs:
  go-build:
    executor: default
    steps:
      - checkout
      - install-dependencies
      - install-go-modules
      - run:
          name: Run build
          command: just build
      - persist_to_workspace:
          root: build
          paths:
            - cli

  go-lint:
    executor: default
    steps:
      - checkout
      - install-dependencies
      - install-go-modules
      - run:
          name: Check go.mod
          command: |
            just tidy cli
            git diff --exit-code
      - run:
          name: Run lint
          command: just lint
  
  go-test:
    executor: default
    steps:
      - checkout
      - install-dependencies
      - install-go-modules
      - run:
          name: Run tests
          command: just test

  go-release:
    executor: default
    steps:
      - checkout
      - install-dependencies
      - install-go-modules
      - run:
          name: Release CLI
          command: GITHUB_TOKEN=$GITHUB_TOKEN_GOVERNANCE just release-cli


  cli-test:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: ./build
      - run:
          name: Run CLI (with passing tests)
          command: ./build/cli ./test/project--passing
      - run:
          name: Run CLI (with failing tests)
          command: |
            ./build/cli ./test/project--failing || EXIT_CODE=$?
            if [ "$EXIT_CODE" -eq 1 ]; then
                echo "Tests failed as expected"
                exit 0
            else
                echo "Tests should have failed"
                exit 1
            fi